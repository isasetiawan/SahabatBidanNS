"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var bidan_service_1 = require("../../bidan.service");
var nativescript_angular_1 = require("nativescript-angular");
var Toast = require("nativescript-toast");
var dialogs = require("ui/dialogs");
var ProfileComponent = (function () {
    function ProfileComponent(bidanServ, routExt) {
        this.bidanServ = bidanServ;
        this.routExt = routExt;
        this.whatsgoingon = function (err) {
            Toast.makeText(err.json().message);
        };
        this.provinces = [];
        this.kabupatens = [];
        this.kecamatans = [];
        this.puskesmases = [];
    }
    ProfileComponent.prototype.ngOnInit = function () {
        this.loadprofile();
    };
    ProfileComponent.prototype.loadprovinces = function () {
        var _this = this;
        this.bidanServ.provinsi().subscribe(function (res) {
            res.content.forEach(function (x) { return _this.provinces.push(x); });
            _this.selprov = _this.provinces.find(function (x) { return x.id === _this.bidan.provinsi_id; }).nama;
        }, this.whatsgoingon);
    };
    ProfileComponent.prototype.askprovince = function () {
        var _this = this;
        dialogs.action({
            message: "Pilih Provinsi Anda Bekerja",
            cancelButtonText: "Batal",
            actions: this.provinces.map(function (x) { return x.nama; })
        }).then(function (result) {
            if (result !== "Batal" && result !== _this.selprov) {
                _this.selprov = result;
                _this.bidan.provinsi_id = _this.provinces.find(function (x) { return x.nama === result; }).id;
                _this.selkab = "";
                _this.selkec = "";
                _this.selpus = "";
                _this.selkelu = "";
                _this.loadkabupatens();
            }
        });
    };
    ProfileComponent.prototype.loadkabupatens = function () {
        var _this = this;
        if (this.bidan.provinsi_id !== null) {
            this.bidanServ.kabupaten(this.bidan.provinsi_id).subscribe(function (res) {
                _this.kabupatens = res.content;
                _this.selkab = _this.kabupatens.find(function (x) { return x.id === _this.bidan.kabupaten_id; }).nama;
            }, this.whatsgoingon);
        }
    };
    ProfileComponent.prototype.askkabupaten = function () {
        var _this = this;
        dialogs.action({
            message: "Pilih Kabupaten/Kota Anda Bekerja",
            cancelButtonText: "Batal",
            actions: this.kabupatens.map(function (x) { return x.nama; })
        }).then(function (result) {
            if (result !== "Batal" && result !== _this.selkab) {
                _this.selkab = result;
                _this.bidan.kabupaten_id = _this.kabupatens.find(function (x) { return x.nama === result; }).id;
                _this.selkec = "";
                _this.selpus = "";
                _this.selkelu = "";
                _this.loadkecamatans();
            }
        });
    };
    ProfileComponent.prototype.loadkecamatans = function () {
        var _this = this;
        if (this.bidan.kabupaten_id !== null) {
            this.bidanServ.kecamatan(this.bidan.kabupaten_id).subscribe(function (res) {
                _this.kecamatans = res.content;
                _this.selkec = _this.kecamatans.find(function (x) { return x.id === _this.bidan.kecamatan_id; }).nama;
            }, this.whatsgoingon);
        }
    };
    ProfileComponent.prototype.askkecamatan = function () {
        var _this = this;
        dialogs.action({
            message: "Pilih Kecamatan Anda Bekerja",
            cancelButtonText: "Batal",
            actions: this.kecamatans.map(function (x) { return x.nama; })
        }).then(function (result) {
            if (result !== "Batal" && result !== _this.selkec) {
                _this.selkec = result;
                _this.bidan.kecamatan_id = _this.kecamatans.find(function (x) { return x.nama === result; }).id;
                _this.selpus = "";
                _this.selkelu = "";
                _this.loadpuskesmas();
            }
        });
    };
    ProfileComponent.prototype.loadpuskesmas = function () {
        var _this = this;
        if (this.bidan.kecamatan_id !== null) {
            this.bidanServ.puskesmas(this.bidan.kecamatan_id).subscribe(function (res) {
                _this.puskesmases = res.content;
                _this.selpus = _this.puskesmases.find(function (x) { return x.id === _this.bidan.puskesmas_id; }).nama;
            }, this.whatsgoingon);
        }
    };
    ProfileComponent.prototype.askpuskesmas = function () {
        var _this = this;
        dialogs.action({
            message: "Pilih Puskesmas Anda Bekerja",
            cancelButtonText: "Batal",
            actions: this.puskesmases.map(function (x) { return x.nama; })
        }).then(function (result) {
            if (result !== "Batal" && result !== _this.selpus) {
                _this.selpus = result;
                _this.bidan.puskesmas_id = _this.puskesmases.find(function (x) { return x.nama === result; }).id;
                _this.selkelu = "";
                _this.loadkelurahan();
            }
        });
    };
    ProfileComponent.prototype.loadkelurahan = function () {
        var _this = this;
        if (this.bidan.puskesmas_id !== null) {
            this.bidanServ.kelurahan(this.bidan.puskesmas_id).subscribe(function (res) {
                _this.kelurahan = res.content;
                _this.selkelu = _this.kelurahan.find(function (x) { return x.id === _this.bidan.kelurahan_id; }).nama;
            });
        }
    };
    ProfileComponent.prototype.askkelurahan = function () {
        var _this = this;
        dialogs.action({
            message: "Pilih Kelurahan Anda Bekerja",
            cancelButtonText: "Batal",
            actions: this.kelurahan.map(function (x) { return x.nama; })
        }).then(function (result) {
            if (result !== "Batal" && result !== _this.selkelu) {
                _this.selkelu = result;
                _this.bidan.kelurahan_id = _this.kelurahan.find(function (x) { return x.nama === result; }).id;
            }
        });
    };
    ProfileComponent.prototype.loadprofile = function () {
        var _this = this;
        this.bidanServ.profile().subscribe(function (res) {
            _this.bidan = res.content;
            _this.loadprovinces();
            _this.loadkabupatens();
            _this.loadkecamatans();
            _this.loadpuskesmas();
            _this.loadkelurahan();
        }, this.whatsgoingon);
    };
    ProfileComponent.prototype.editprofile = function () {
        var _this = this;
        this.bidanServ.updateProfile(this.bidan).subscribe(function (res) {
            Toast.makeText(res.message).show();
            _this.routExt.backToPreviousPage();
        }, function (err) { return console.log(JSON.stringify(err)); });
    };
    ProfileComponent = __decorate([
        core_1.Component({
            selector: "ns-profile",
            moduleId: module.id,
            templateUrl: "./profile.component.html",
            providers: [bidan_service_1.BidanService]
        }),
        __metadata("design:paramtypes", [bidan_service_1.BidanService,
            nativescript_angular_1.RouterExtensions])
    ], ProfileComponent);
    return ProfileComponent;
}());
exports.ProfileComponent = ProfileComponent;
//# sourceMappingURL=data:application/json;base64,