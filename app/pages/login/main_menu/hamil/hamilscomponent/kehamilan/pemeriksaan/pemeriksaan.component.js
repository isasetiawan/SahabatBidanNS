"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var Pemeriksaan_1 = require("./Pemeriksaan");
var router_1 = require("@angular/router");
var pemeriksaan_service_1 = require("../pemeriksaan.service");
var Toast = require("nativescript-toast");
var nativescript_angular_1 = require("nativescript-angular");
var app = require("tns-core-modules/application");
var appSettings = require("application-settings");
var clipboard = require("nativescript-clipboard");
var PemeriksaanComponent = (function () {
    function PemeriksaanComponent(actRoute, serv, rouex) {
        var _this = this;
        this.actRoute = actRoute;
        this.serv = serv;
        this.rouex = rouex;
        this.keadanumum = [
            { key: 0, label: 'Baik' },
            { key: 1, label: 'Lemah' },
            { key: 2, label: 'Tampak Anemis' }
        ];
        this.keadaankhusus = [
            { key: 0, label: 'Tidak Ada' },
            { key: 1, label: 'Bengkak Muka/Tungkai' },
            { key: 2, label: 'Kembar Air' },
            { key: 3, label: 'Kejang-kejang' }
        ];
        this.pone = [{ key: 0, label: '-' }, { key: 1, label: '+' }];
        this.react = [{ key: 0, label: 'non-reaktif' }, { key: 1, label: 'reaktif' }];
        this.proteinurine = ["Tidak Diperiksa", "Negatif", "+1", "+2", "Lebih dari +2 "];
        this.glukosa = ["Tidak diperiksa", "Reduksi +", "Reduksi -"];
        this.goldar = ["Belum diperiksa", "A", "B", "AB", "O"];
        this.yatak = [{ key: 0, label: 'Tidak' }, { key: 1, label: 'Ya' }];
        this.hima = [{ key: 0, label: 'mati' }, { key: 1, label: 'hidup' }];
        this.tfunit = [{ key: 0, label: 'Jari' }, { key: 1, label: 'Centimeter' }];
        this.komplikasi = [
            { key: 0, label: 'HDK' },
            { key: 1, label: 'Abortus' },
            { key: 2, label: 'Perdarahan' },
            { key: 3, label: 'Infeksi' },
            { key: 4, label: 'KPD' },
            { key: 7, label: 'Sungsang' },
            { key: 5, label: 'Lainnya' },
            { key: 6, label: 'Tidak ada' }
        ];
        this.dirujuk = [
            { key: 0, label: 'Puskesmas' },
            { key: 1, label: 'Rumah sakit bersalin' },
            { key: 2, label: 'Rumah salit ibu anak' },
            { key: 3, label: 'Rumah sakit' },
            { key: 4, label: 'Lainnya' },
            { key: 5, label: 'Tidak dirujuk' }
        ];
        this.tempats = [
            "Rumah",
            "Poskesdes",
            "Pustu",
            "Puskesmas",
            "Rumah Sakit Bersalin",
            "Rumah Sakit Ibu Anak",
            "Rumah Sakit",
            "Rumah Sakit Odha",
            "Praktek mandiri",
            "Klinik"
        ];
        this.androidApp = app.android;
        this.isedit = false;
        this.pemeriksaan = new Pemeriksaan_1.Pemeriksaan();
        this.actRoute.queryParams.subscribe(function (params) {
            _this.id_kehamilan = params.id_kehamilan;
            if (params.data) {
                _this.id_pemeriksaan = params.id_pemeriksaan;
                _this.pemeriksaan = JSON.parse(params.data);
                _this.isedit = true;
            }
        });
    }
    PemeriksaanComponent.prototype.save = function () {
        var _this = this;
        if (this.isedit) {
            this.serv.update(this.id_kehamilan, this.pemeriksaan.id, this.pemeriksaan).subscribe(function (res) {
                Toast.makeText(res.message).show();
                _this.rouex.backToPreviousPage();
            });
        }
        else {
            this.serv.store(this.id_kehamilan, this.pemeriksaan).subscribe(function (res) {
                Toast.makeText(res.message).show();
                _this.rouex.backToPreviousPage();
            });
        }
    };
    PemeriksaanComponent.prototype.open_clinton = function () {
        var token_and_id = appSettings.getString("token") + " " + this.id_pemeriksaan;
        clipboard.setText(token_and_id).then(function () { Toast.makeText(token_and_id).show(); });
    };
    PemeriksaanComponent.prototype.ngOnInit = function () { };
    PemeriksaanComponent = __decorate([
        core_1.Component({
            moduleId: module.id,
            selector: 'app-pemeriksaan',
            templateUrl: './pemeriksaan.component.html',
            styleUrls: ['./pemeriksaan.component.css'],
            providers: [pemeriksaan_service_1.PemeriksaanService]
        }),
        __metadata("design:paramtypes", [router_1.ActivatedRoute,
            pemeriksaan_service_1.PemeriksaanService,
            nativescript_angular_1.RouterExtensions])
    ], PemeriksaanComponent);
    return PemeriksaanComponent;
}());
exports.PemeriksaanComponent = PemeriksaanComponent;
//# sourceMappingURL=data:application/json;base64,